name: 'Build & Push Image'

on:
  workflow_call:
    inputs:
      ecr_repository_name:
        type: string
        required: true
      aws_function_name:
        type: string
        required: false
      image_tag_prefix:
        type: string
        required: true
      artifacts_name:
        type: string
        required: true
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_region:
        required: true

jobs:
  build:
    name: 'Build & Push Image'
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.push-image.outputs.image_uri }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifacts_name }}

      - name: Build Docker Image, tag, and push image to Amazon ECR
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr_repository_name }}
        run: |

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.image_tag_prefix }}$GITHUB_RUN_NUMBER
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.image_tag_prefix }}$GITHUB_RUN_NUMBER

          echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.image_tag_prefix }}$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

  trigger-deploy:
    if: inputs.aws_function_name != ''
    needs: [build]
    name: 'Trigger Deploy'
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region }}
          role-to-assume: arn:aws:iam::115578597962:role/ContinuousDeliveryRole
          role-duration-seconds: 900
      - name: Update lambda image uri
        run: |
          aws lambda update-function-code --function-name ${{ inputs.aws_function_name }} --image-uri ${{ needs.build.outputs.image_uri }}
