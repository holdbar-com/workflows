name: "Build & Push Image"

on:
  workflow_call:
    inputs:
      dotnet_version:
        type: string
        required: false
        default: '6.0.401'
      dotnet_configuration:
        type: string
        required: false
        default: 'Debug'
      nuget_username:
        type: string
        required: false
      ecr_repository_name:
        type: string
        required: true
      image_tag_prefix:
        type: string
        required: true
    secrets:
      myget_nuget_apikey:
        required: false
      nuget_auth_token:
        required: false
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_region:
        required: true

    
env:
  DOTNET_VERSION: ${{ inputs.dotnet_version }}
  MYGET_NUGET_APIKEY: ${{ secrets.myget_nuget_apikey }}
  NUGET_AUTH_TOKEN: ${{ secrets.nuget_auth_token }}

jobs:
  build:
    name: "Build & Push Image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
        
      - name: Build Package
        run: |
          project_name=$(basename *.sln .sln)
          if [[ -z '${{ inputs.nuget_username }}' ]]; then
            dotnet nuget update source github --username ${{ inputs.nuget_username }} --password ${{ secrets.nuget_auth_token }} --store-password-in-clear-text --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
          fi
          dotnet publish /p:GenerateRuntimeConfigurationFiles=true /p:PublishReadyToRun=true -c ${{ inputs.dotnet_configuration }} --self-contained false -r linux-x64 -o ${GITHUB_WORKSPACE}/out/ $project_name

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr_repository_name }}
        run: |
          
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.image_tag_prefix }}$GITHUB_RUN_NUMBER
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.image_tag_prefix }}$GITHUB_RUN_NUMBER
